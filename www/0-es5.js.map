{"version":3,"sources":["node_modules/@ionic/core/dist/esm/index-f4f18d97.js"],"names":[],"mappings":"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","sourcesContent":["import { w as writeTask } from './chunk-d0403a2f.js';\nimport './chunk-1074393c.js';\n\nclass GestureController {\r\n    constructor() {\r\n        this.gestureId = 0;\r\n        this.requestedStart = new Map();\r\n        this.disabledGestures = new Map();\r\n        this.disabledScroll = new Set();\r\n    }\r\n    /**\r\n     * Creates a gesture delegate based on the GestureConfig passed\r\n     */\r\n    createGesture(config) {\r\n        return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\r\n    }\r\n    /**\r\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\r\n     */\r\n    createBlocker(opts = {}) {\r\n        return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\r\n    }\r\n    start(gestureName, id, priority) {\r\n        if (!this.canStart(gestureName)) {\r\n            this.requestedStart.delete(id);\r\n            return false;\r\n        }\r\n        this.requestedStart.set(id, priority);\r\n        return true;\r\n    }\r\n    capture(gestureName, id, priority) {\r\n        if (!this.start(gestureName, id, priority)) {\r\n            return false;\r\n        }\r\n        const requestedStart = this.requestedStart;\r\n        let maxPriority = -10000;\r\n        requestedStart.forEach(value => {\r\n            maxPriority = Math.max(maxPriority, value);\r\n        });\r\n        if (maxPriority === priority) {\r\n            this.capturedId = id;\r\n            requestedStart.clear();\r\n            const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\r\n            document.dispatchEvent(event);\r\n            return true;\r\n        }\r\n        requestedStart.delete(id);\r\n        return false;\r\n    }\r\n    release(id) {\r\n        this.requestedStart.delete(id);\r\n        if (this.capturedId === id) {\r\n            this.capturedId = undefined;\r\n        }\r\n    }\r\n    disableGesture(gestureName, id) {\r\n        let set = this.disabledGestures.get(gestureName);\r\n        if (set === undefined) {\r\n            set = new Set();\r\n            this.disabledGestures.set(gestureName, set);\r\n        }\r\n        set.add(id);\r\n    }\r\n    enableGesture(gestureName, id) {\r\n        const set = this.disabledGestures.get(gestureName);\r\n        if (set !== undefined) {\r\n            set.delete(id);\r\n        }\r\n    }\r\n    disableScroll(id) {\r\n        this.disabledScroll.add(id);\r\n        if (this.disabledScroll.size === 1) {\r\n            document.body.classList.add(BACKDROP_NO_SCROLL);\r\n        }\r\n    }\r\n    enableScroll(id) {\r\n        this.disabledScroll.delete(id);\r\n        if (this.disabledScroll.size === 0) {\r\n            document.body.classList.remove(BACKDROP_NO_SCROLL);\r\n        }\r\n    }\r\n    canStart(gestureName) {\r\n        if (this.capturedId !== undefined) {\r\n            // a gesture already captured\r\n            return false;\r\n        }\r\n        if (this.isDisabled(gestureName)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    isCaptured() {\r\n        return this.capturedId !== undefined;\r\n    }\r\n    isScrollDisabled() {\r\n        return this.disabledScroll.size > 0;\r\n    }\r\n    isDisabled(gestureName) {\r\n        const disabled = this.disabledGestures.get(gestureName);\r\n        if (disabled && disabled.size > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    newID() {\r\n        this.gestureId++;\r\n        return this.gestureId;\r\n    }\r\n}\r\nclass GestureDelegate {\r\n    constructor(ctrl, id, name, priority, disableScroll) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.disableScroll = disableScroll;\r\n        this.priority = priority * 1000000 + id;\r\n        this.ctrl = ctrl;\r\n    }\r\n    canStart() {\r\n        if (!this.ctrl) {\r\n            return false;\r\n        }\r\n        return this.ctrl.canStart(this.name);\r\n    }\r\n    start() {\r\n        if (!this.ctrl) {\r\n            return false;\r\n        }\r\n        return this.ctrl.start(this.name, this.id, this.priority);\r\n    }\r\n    capture() {\r\n        if (!this.ctrl) {\r\n            return false;\r\n        }\r\n        const captured = this.ctrl.capture(this.name, this.id, this.priority);\r\n        if (captured && this.disableScroll) {\r\n            this.ctrl.disableScroll(this.id);\r\n        }\r\n        return captured;\r\n    }\r\n    release() {\r\n        if (this.ctrl) {\r\n            this.ctrl.release(this.id);\r\n            if (this.disableScroll) {\r\n                this.ctrl.enableScroll(this.id);\r\n            }\r\n        }\r\n    }\r\n    destroy() {\r\n        this.release();\r\n        this.ctrl = undefined;\r\n    }\r\n}\r\nclass BlockerDelegate {\r\n    constructor(ctrl, id, disable, disableScroll) {\r\n        this.id = id;\r\n        this.disable = disable;\r\n        this.disableScroll = disableScroll;\r\n        this.ctrl = ctrl;\r\n    }\r\n    block() {\r\n        if (!this.ctrl) {\r\n            return;\r\n        }\r\n        if (this.disable) {\r\n            for (const gesture of this.disable) {\r\n                this.ctrl.disableGesture(gesture, this.id);\r\n            }\r\n        }\r\n        if (this.disableScroll) {\r\n            this.ctrl.disableScroll(this.id);\r\n        }\r\n    }\r\n    unblock() {\r\n        if (!this.ctrl) {\r\n            return;\r\n        }\r\n        if (this.disable) {\r\n            for (const gesture of this.disable) {\r\n                this.ctrl.enableGesture(gesture, this.id);\r\n            }\r\n        }\r\n        if (this.disableScroll) {\r\n            this.ctrl.enableScroll(this.id);\r\n        }\r\n    }\r\n    destroy() {\r\n        this.unblock();\r\n        this.ctrl = undefined;\r\n    }\r\n}\r\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\r\nconst GESTURE_CONTROLLER = new GestureController();\n\nconst addEventListener = (el, eventName, callback, opts) => {\r\n    // use event listener options when supported\r\n    // otherwise it's just a boolean for the \"capture\" arg\r\n    const listenerOpts = supportsPassive(el) ? {\r\n        'capture': !!opts.capture,\r\n        'passive': !!opts.passive,\r\n    } : !!opts.capture;\r\n    let add;\r\n    let remove;\r\n    if (el['__zone_symbol__addEventListener']) {\r\n        add = '__zone_symbol__addEventListener';\r\n        remove = '__zone_symbol__removeEventListener';\r\n    }\r\n    else {\r\n        add = 'addEventListener';\r\n        remove = 'removeEventListener';\r\n    }\r\n    el[add](eventName, callback, listenerOpts);\r\n    return () => {\r\n        el[remove](eventName, callback, listenerOpts);\r\n    };\r\n};\r\nconst supportsPassive = (node) => {\r\n    if (_sPassive === undefined) {\r\n        try {\r\n            const opts = Object.defineProperty({}, 'passive', {\r\n                get: () => {\r\n                    _sPassive = true;\r\n                }\r\n            });\r\n            node.addEventListener('optsTest', () => { return; }, opts);\r\n        }\r\n        catch (e) {\r\n            _sPassive = false;\r\n        }\r\n    }\r\n    return !!_sPassive;\r\n};\r\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\r\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\r\n    let rmTouchStart;\r\n    let rmTouchMove;\r\n    let rmTouchEnd;\r\n    let rmTouchCancel;\r\n    let rmMouseStart;\r\n    let rmMouseMove;\r\n    let rmMouseUp;\r\n    let lastTouchEvent = 0;\r\n    const handleTouchStart = (ev) => {\r\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\r\n        if (!pointerDown(ev)) {\r\n            return;\r\n        }\r\n        if (!rmTouchMove && pointerMove) {\r\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\r\n        }\r\n        if (!rmTouchEnd) {\r\n            rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\r\n        }\r\n        if (!rmTouchCancel) {\r\n            rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\r\n        }\r\n    };\r\n    const handleMouseDown = (ev) => {\r\n        if (lastTouchEvent > Date.now()) {\r\n            return;\r\n        }\r\n        if (!pointerDown(ev)) {\r\n            return;\r\n        }\r\n        if (!rmMouseMove && pointerMove) {\r\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\r\n        }\r\n        if (!rmMouseUp) {\r\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\r\n        }\r\n    };\r\n    const handleTouchEnd = (ev) => {\r\n        stopTouch();\r\n        if (pointerUp) {\r\n            pointerUp(ev);\r\n        }\r\n    };\r\n    const handleMouseUp = (ev) => {\r\n        stopMouse();\r\n        if (pointerUp) {\r\n            pointerUp(ev);\r\n        }\r\n    };\r\n    const stopTouch = () => {\r\n        if (rmTouchMove) {\r\n            rmTouchMove();\r\n        }\r\n        if (rmTouchEnd) {\r\n            rmTouchEnd();\r\n        }\r\n        if (rmTouchCancel) {\r\n            rmTouchCancel();\r\n        }\r\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\r\n    };\r\n    const stopMouse = () => {\r\n        if (rmMouseMove) {\r\n            rmMouseMove();\r\n        }\r\n        if (rmMouseUp) {\r\n            rmMouseUp();\r\n        }\r\n        rmMouseMove = rmMouseUp = undefined;\r\n    };\r\n    const stop = () => {\r\n        stopTouch();\r\n        stopMouse();\r\n    };\r\n    const setDisabled = (disabled) => {\r\n        if (disabled) {\r\n            if (rmTouchStart) {\r\n                rmTouchStart();\r\n            }\r\n            if (rmMouseStart) {\r\n                rmMouseStart();\r\n            }\r\n            rmTouchStart = rmMouseStart = undefined;\r\n            stop();\r\n        }\r\n        else {\r\n            if (!rmTouchStart) {\r\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\r\n            }\r\n            if (!rmMouseStart) {\r\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\r\n            }\r\n        }\r\n    };\r\n    const destroy = () => {\r\n        setDisabled(true);\r\n        pointerUp = pointerMove = pointerDown = undefined;\r\n    };\r\n    return {\r\n        setDisabled,\r\n        stop,\r\n        destroy\r\n    };\r\n};\r\nconst getDocument = (node) => {\r\n    return node instanceof Document ? node : node.ownerDocument;\r\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\r\n    const radians = maxAngle * (Math.PI / 180);\r\n    const isDirX = direction === 'x';\r\n    const maxCosine = Math.cos(radians);\r\n    const threshold = thresh * thresh;\r\n    let startX = 0;\r\n    let startY = 0;\r\n    let dirty = false;\r\n    let isPan = 0;\r\n    return {\r\n        start(x, y) {\r\n            startX = x;\r\n            startY = y;\r\n            isPan = 0;\r\n            dirty = true;\r\n        },\r\n        detect(x, y) {\r\n            if (!dirty) {\r\n                return false;\r\n            }\r\n            const deltaX = (x - startX);\r\n            const deltaY = (y - startY);\r\n            const distance = deltaX * deltaX + deltaY * deltaY;\r\n            if (distance < threshold) {\r\n                return false;\r\n            }\r\n            const hypotenuse = Math.sqrt(distance);\r\n            const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\r\n            if (cosine > maxCosine) {\r\n                isPan = 1;\r\n            }\r\n            else if (cosine < -maxCosine) {\r\n                isPan = -1;\r\n            }\r\n            else {\r\n                isPan = 0;\r\n            }\r\n            dirty = false;\r\n            return true;\r\n        },\r\n        isGesture() {\r\n            return isPan !== 0;\r\n        },\r\n        getDirection() {\r\n            return isPan;\r\n        }\r\n    };\r\n};\n\nconst createGesture = (config) => {\r\n    let hasCapturedPan = false;\r\n    let hasStartedPan = false;\r\n    let hasFiredStart = true;\r\n    let isMoveQueued = false;\r\n    const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\r\n    const canStart = finalConfig.canStart;\r\n    const onWillStart = finalConfig.onWillStart;\r\n    const onStart = finalConfig.onStart;\r\n    const onEnd = finalConfig.onEnd;\r\n    const notCaptured = finalConfig.notCaptured;\r\n    const onMove = finalConfig.onMove;\r\n    const threshold = finalConfig.threshold;\r\n    const detail = {\r\n        type: 'pan',\r\n        startX: 0,\r\n        startY: 0,\r\n        startTimeStamp: 0,\r\n        currentX: 0,\r\n        currentY: 0,\r\n        velocityX: 0,\r\n        velocityY: 0,\r\n        deltaX: 0,\r\n        deltaY: 0,\r\n        timeStamp: 0,\r\n        event: undefined,\r\n        data: undefined\r\n    };\r\n    const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\r\n    const gesture = GESTURE_CONTROLLER.createGesture({\r\n        name: config.gestureName,\r\n        priority: config.gesturePriority,\r\n        disableScroll: config.disableScroll\r\n    });\r\n    const pointerDown = (ev) => {\r\n        const timeStamp = now(ev);\r\n        if (hasStartedPan || !hasFiredStart) {\r\n            return false;\r\n        }\r\n        updateDetail(ev, detail);\r\n        detail.startX = detail.currentX;\r\n        detail.startY = detail.currentY;\r\n        detail.startTimeStamp = detail.timeStamp = timeStamp;\r\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\r\n        detail.event = ev;\r\n        // Check if gesture can start\r\n        if (canStart && canStart(detail) === false) {\r\n            return false;\r\n        }\r\n        // Release fallback\r\n        gesture.release();\r\n        // Start gesture\r\n        if (!gesture.start()) {\r\n            return false;\r\n        }\r\n        hasStartedPan = true;\r\n        if (threshold === 0) {\r\n            return tryToCapturePan();\r\n        }\r\n        pan.start(detail.startX, detail.startY);\r\n        return true;\r\n    };\r\n    const pointerMove = (ev) => {\r\n        // fast path, if gesture is currently captured\r\n        // do minimum job to get user-land even dispatched\r\n        if (hasCapturedPan) {\r\n            if (!isMoveQueued && hasFiredStart) {\r\n                isMoveQueued = true;\r\n                calcGestureData(detail, ev);\r\n                writeTask(fireOnMove);\r\n            }\r\n            return;\r\n        }\r\n        // gesture is currently being detected\r\n        calcGestureData(detail, ev);\r\n        if (pan.detect(detail.currentX, detail.currentY)) {\r\n            if (!pan.isGesture() || !tryToCapturePan()) {\r\n                abortGesture();\r\n            }\r\n        }\r\n    };\r\n    const fireOnMove = () => {\r\n        // Since fireOnMove is called inside a RAF, onEnd() might be called,\r\n        // we must double check hasCapturedPan\r\n        if (!hasCapturedPan) {\r\n            return;\r\n        }\r\n        isMoveQueued = false;\r\n        if (onMove) {\r\n            onMove(detail);\r\n        }\r\n    };\r\n    const tryToCapturePan = () => {\r\n        if (gesture && !gesture.capture()) {\r\n            return false;\r\n        }\r\n        hasCapturedPan = true;\r\n        hasFiredStart = false;\r\n        // reset start position since the real user-land event starts here\r\n        // If the pan detector threshold is big, not resetting the start position\r\n        // will cause a jump in the animation equal to the detector threshold.\r\n        // the array of positions used to calculate the gesture velocity does not\r\n        // need to be cleaned, more points in the positions array always results in a\r\n        // more accurate value of the velocity.\r\n        detail.startX = detail.currentX;\r\n        detail.startY = detail.currentY;\r\n        detail.startTimeStamp = detail.timeStamp;\r\n        if (onWillStart) {\r\n            onWillStart(detail).then(fireOnStart);\r\n        }\r\n        else {\r\n            fireOnStart();\r\n        }\r\n        return true;\r\n    };\r\n    const fireOnStart = () => {\r\n        if (onStart) {\r\n            onStart(detail);\r\n        }\r\n        hasFiredStart = true;\r\n    };\r\n    const reset = () => {\r\n        hasCapturedPan = false;\r\n        hasStartedPan = false;\r\n        isMoveQueued = false;\r\n        hasFiredStart = true;\r\n        gesture.release();\r\n    };\r\n    // END *************************\r\n    const pointerUp = (ev) => {\r\n        const tmpHasCaptured = hasCapturedPan;\r\n        const tmpHasFiredStart = hasFiredStart;\r\n        reset();\r\n        if (!tmpHasFiredStart) {\r\n            return;\r\n        }\r\n        calcGestureData(detail, ev);\r\n        // Try to capture press\r\n        if (tmpHasCaptured) {\r\n            if (onEnd) {\r\n                onEnd(detail);\r\n            }\r\n            return;\r\n        }\r\n        // Not captured any event\r\n        if (notCaptured) {\r\n            notCaptured(detail);\r\n        }\r\n    };\r\n    const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\r\n        capture: false,\r\n    });\r\n    const abortGesture = () => {\r\n        reset();\r\n        pointerEvents.stop();\r\n        if (notCaptured) {\r\n            notCaptured(detail);\r\n        }\r\n    };\r\n    return {\r\n        setDisabled(disabled) {\r\n            if (disabled && hasCapturedPan) {\r\n                pointerUp(undefined);\r\n            }\r\n            pointerEvents.setDisabled(disabled);\r\n        },\r\n        destroy() {\r\n            gesture.destroy();\r\n            pointerEvents.destroy();\r\n        }\r\n    };\r\n};\r\nconst calcGestureData = (detail, ev) => {\r\n    if (!ev) {\r\n        return;\r\n    }\r\n    const prevX = detail.currentX;\r\n    const prevY = detail.currentY;\r\n    const prevT = detail.timeStamp;\r\n    updateDetail(ev, detail);\r\n    const currentX = detail.currentX;\r\n    const currentY = detail.currentY;\r\n    const timestamp = detail.timeStamp = now(ev);\r\n    const timeDelta = timestamp - prevT;\r\n    if (timeDelta > 0 && timeDelta < 100) {\r\n        const velocityX = (currentX - prevX) / timeDelta;\r\n        const velocityY = (currentY - prevY) / timeDelta;\r\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\r\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\r\n    }\r\n    detail.deltaX = currentX - detail.startX;\r\n    detail.deltaY = currentY - detail.startY;\r\n    detail.event = ev;\r\n};\r\nconst updateDetail = (ev, detail) => {\r\n    // get X coordinates for either a mouse click\r\n    // or a touch depending on the given event\r\n    let x = 0;\r\n    let y = 0;\r\n    if (ev) {\r\n        const changedTouches = ev.changedTouches;\r\n        if (changedTouches && changedTouches.length > 0) {\r\n            const touch = changedTouches[0];\r\n            x = touch.clientX;\r\n            y = touch.clientY;\r\n        }\r\n        else if (ev.pageX !== undefined) {\r\n            x = ev.pageX;\r\n            y = ev.pageY;\r\n        }\r\n    }\r\n    detail.currentX = x;\r\n    detail.currentY = y;\r\n};\r\nconst now = (ev) => {\r\n    return ev.timeStamp || Date.now();\r\n};\n\nexport { GESTURE_CONTROLLER, createGesture };\n"],"sourceRoot":"webpack:///"}